import org.openapitools.generator.gradle.plugin.tasks.GenerateTask
buildscript {
	dependencies {
		classpath("org.openapitools:openapi-generator-gradle-plugin:7.1.0")
	}
}
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id "org.openapi.generator" version "7.1.0"
	id 'com.diffplug.spotless' version '6.25.0' apply false
}

group = 'cm.domeni'
version = '0.0.1-SNAPSHOT'
apply plugin: 'com.diffplug.spotless'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}
ext {
	set('snippetsDir', file("build/generated-snippets"))
}
ext {
	set('mapstructVersion', "1.5.5.Final")
}
repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// OPENAPI
	implementation('io.swagger:swagger-annotations:1.6.11')
	implementation('org.openapitools:jackson-databind-nullable:0.2.6')
	implementation('org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0')
	//postgres
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.postgresql:postgresql'
	// Mapstruct
	implementation("org.mapstruct:mapstruct:${mapstructVersion}")
	annotationProcessor("org.mapstruct:mapstruct-processor:${mapstructVersion}")
	testAnnotationProcessor("org.mapstruct:mapstruct-processor:${mapstructVersion}")
}

openApiGenerate {
	generatorName = "spring"
	inputSpec = "$rootDir/openapi/main.yaml".toString()
	outputDir = layout.buildDirectory.file("generated/sources/openapi").get().asFile.path
	apiPackage = "cm.domeni.flash-home.api"
	modelPackage = "cm.domeni.flash-home.dto"
	configOptions = [
			dateLibrary         : "java8-localdatetime",
			library             : "spring-boot",
			interfaceOnly       : "true",
			useTags             : "true",
			skipDefaultInterface: "true",
			useSpringBoot3      : "true",
			openApiNullable     : "false"
	]
	typeMappings = [
			time: "java.time.LocalTime",
	]
}

sourceSets.main.java.srcDir layout.buildDirectory.file("generated/sources/openapi/src/main/java").get().asFile.path
compileJava.dependsOn(
		tasks.openApiGenerate
)

tasks.named('test') {
	useJUnitPlatform()
}

spotless {
	java {
		googleJavaFormat('1.22.0')
				.reflowLongStrings()
				.formatJavadoc(true)
				.reorderImports(true)
				.groupArtifact('com.google.googlejavaformat:google-java-format')
	}
	groovyGradle {
		target '*.gradle'
		greclipse()
	}
}
